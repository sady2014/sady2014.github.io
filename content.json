[{"title":"","date":"2017-01-14T08:06:27.047Z","path":"2017/01/14/posy/","text":"this是Javascript语言的一个关键字。它代表函数运行时，自动生成的一个内部对象，只能在函数内部使用。比如， function test(){ this.x = 1; } 随着函数使用场合的不同，this的值会发生变化。但是有一个总的原则，那就是this指的是，调用函数的那个对象。下面分四种情况，详细讨论this的用法。情况一：纯粹的函数调用这是函数的最通常用法，属于全局性调用，因此this就代表全局对象Global。请看下面这段代码，它的运行结果是1。 function test(){ this.x = 1; alert(this.x); } test(); // 1 为了证明this就是全局对象，我对代码做一些改变： var x = 1; function test(){ alert(this.x); } test(); // 1运行结果还是1。再变一下： var x = 1; function test(){ this.x = 0; } test(); alert(x); //0情况二：作为对象方法的调用函数还可以作为某个对象的方法调用，这时this就指这个上级对象。 function test(){ alert(this.x); } var o = {}; o.x = 1; o.m = test; o.m(); // 1情况三 作为构造函数调用所谓构造函数，就是通过这个函数生成一个新对象（object）。这时，this就指这个新对象。 function test(){ this.x = 1; } var o = new test(); alert(o.x); // 1运行结果为1。为了表明这时this不是全局对象，我对代码做一些改变： var x = 2; function test(){ this.x = 1; } var o = new test(); alert(x); //2运行结果为2，表明全局变量x的值根本没变。情况四 apply调用apply()是函数对象的一个方法，它的作用是改变函数的调用对象，它的第一个参数就表示改变后的调用这个函数的对象。因此，this指的就是这第一个参数。 var x = 0; function test(){ alert(this.x); } var o={}; o.x = 1; o.m = test; o.m.apply(); //0apply()的参数为空时，默认调用全局对象。因此，这时的运行结果为0，证明this指的是全局对象。如果把最后一行代码修改为 o.m.apply(o); //1运行结果就变成了1，证明了这时this代表的是对象o。","tags":[]},{"title":"Hello World","date":"2017-01-14T07:58:30.049Z","path":"2017/01/14/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]